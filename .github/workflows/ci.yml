on:
  push:
    branches:
      - main
      - develop
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".github/workflows/**"

env:
  TF_VERSION: "1.13.3"
  AWS_REGION: "sa-east-1"
  DESTROY_DELAY_SECONDS: "60"

defaults:
  run:
    working-directory: ./terraform

permissions:
  id-token: write
  contents: read

jobs:
  terraform-validate:
    name: "Terraform Validate"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - run: terraform init -upgrade
      - run: terraform validate

  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    needs: terraform-validate
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - run: terraform init -upgrade

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="project_name=fastfood" \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="github_org=vinicius0012" \
            -var="github_repo=11soat-fast-food-fase-3-api"

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - run: terraform init -upgrade

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="project_name=fastfood" \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="github_org=vinicius0012" \
            -var="github_repo=11soat-fast-food-fase-3-api"

      - name: Terraform Output
        run: |
          echo "=== INFRAESTRUTURA CRIADA ==="
          terraform output || true

  terraform-destroy:
    name: "Terraform Destroy (auto-cleanup)"
    runs-on: ubuntu-latest
    needs: terraform-apply
    if: always() # sempre tenta destruir ao final do workflow
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ACTIONS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - run: terraform init -upgrade

      - name: Skip if no state
        run: |
          if [ ! -f "terraform.tfstate" ] && [ ! -f "terraform.tfstate.backup" ]; then
            echo "No local state found. Nothing to destroy."
            exit 0
          fi

      - name: Optional delay before destroy
        run: |
          if [ "${DESTROY_DELAY_SECONDS}" != "0" ]; then
            echo "Waiting ${DESTROY_DELAY_SECONDS}s before destroy..."
            sleep "${DESTROY_DELAY_SECONDS}"
          fi

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var="project_name=fastfood" \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="github_org=vinicius0012" \
            -var="github_repo=11soat-fast-food-fase-3-api"
